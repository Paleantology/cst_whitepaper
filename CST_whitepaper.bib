
@incollection{renkl_learning_2014,
	title = {Learning from worked examples: how to prepare students for meaningful problem solving},
	url = {http://teachpsych.org/ebooks/asle2014/index.php},
	pages = {118--130},
	booktitle = {Applying Science of Learning in Education: Infusing Psychological Science into the Curriculum},
	publisher = {Society for the Teaching of Psychology},
	author = {Renkl, Alexander},
	editor = {Benassi, Victor A. and Overson, Catherine E. and Hakala, Christopher M.},
	urldate = {2019-08-08},
	date = {2014},
	year = {2014},
	keywords = {teaching},
	file = {Society for the Teaching of Psychology - asle2014:/home/sarah/Zotero/storage/MQER78VU/index.html:text/html}
}

@article{schwonke_worked-example_2009,
	title = {The worked-example effect: Not an artefact of lousy control conditions},
	volume = {25},
	issn = {0747-5632},
	url = {http://www.sciencedirect.com/science/article/pii/S0747563208002161},
	doi = {10.1016/j.chb.2008.12.011},
	series = {Including the Special Issue: State of the Art Research into Cognitive Load Theory},
	shorttitle = {The worked-example effect},
	abstract = {Recently it has been argued that the worked-example effect, as postulated by Cognitive Load Theory, might only occur when compared to unsupported problem-solving, but not when compared to well-supported or tutored problem-solving as instantiated, for example, in Cognitive Tutors. In two experiments, we compared a standard Cognitive Tutor with a version that was enriched with faded worked examples. In Experiment 1, students in the example condition needed less learning time to acquire a comparable amount of procedural skills and conceptual understanding. In Experiment 2, the efficiency advantage was replicated. In addition, students in the example condition acquired a deeper conceptual understanding. The present findings demonstrate that the worked-example effect is indeed robust and can be found even when compared to well-supported learning by problem-solving.},
	pages = {258--266},
	number = {2},
	journaltitle = {Computers in Human Behavior},
	shortjournal = {Computers in Human Behavior},
	author = {Schwonke, Rolf and Renkl, Alexander and Krieg, Carmen and Wittwer, Jörg and Aleven, Vincent and Salden, Ron},
	urldate = {2019-08-08},
	date = {2009-03-01},
	year = {2009},
	keywords = {Cognitive Tutors, Example-based learning, Intelligent tutoring systems, Problem-solving, Tutoring},
	file = {ScienceDirect Full Text PDF:/home/sarah/Zotero/storage/J3UUVSH9/Schwonke et al. - 2009 - The worked-example effect Not an artefact of lous.pdf:application/pdf;ScienceDirect Snapshot:/home/sarah/Zotero/storage/7XIV7E4U/S0747563208002161.html:text/html}
}

@article{renkl_toward_2014,
	title = {Toward an Instructionally Oriented Theory of Example-Based Learning},
	volume = {38},
	rights = {Copyright © 2013 Cognitive Science Society, Inc},
	issn = {1551-6709},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/cogs.12086},
	doi = {10.1111/cogs.12086},
	abstract = {Learning from examples is a very effective means of initial cognitive skill acquisition. There is an enormous body of research on the specifics of this learning method. This article presents an instructionally oriented theory of example-based learning that integrates theoretical assumptions and findings from three research areas: learning from worked examples, observational learning, and analogical reasoning. This theory has descriptive and prescriptive elements. The descriptive subtheory deals with (a) the relevance and effectiveness of examples, (b) phases of skill acquisition, and (c) learning processes. The prescriptive subtheory proposes instructional principles that make full exploitation of the potential of example-based learning possible.},
	pages = {1--37},
	number = {1},
	journaltitle = {Cognitive Science},
	author = {Renkl, Alexander},
	urldate = {2019-08-08},
	date = {2014},
	year = {2014},
	langid = {english},
	keywords = {Analogical reasoning, Observational learning, Skill acquisition, Transfer, Worked example, teaching},
	file = {Full Text PDF:/home/sarah/Zotero/storage/JSN2PK3M/Renkl - 2014 - Toward an Instructionally Oriented Theory of Examp.pdf:application/pdf;Snapshot:/home/sarah/Zotero/storage/UNHLADGV/cogs.html:text/html}
}

@article{olsen_using_2005,
	title = {Using pseudocode to teach problem solving},
	volume = {21},
	abstract = {Teaching students how to solve problems is one of the biggest challenges of most Computer Science ({CS}) courses. An algorithm is by definition a set of well defined steps to solve a problem. Programs are algorithms written in one of many programming languages. Recommended methods for teaching students how to solve problems include a focus on mathematics, flowcharts, {UML}, pseudocode, and other methods. In this paper we describe an approach that emphasizes the use of pseudocode in the introductory {CS} course as described in the {ACM} Curriculum 2001 [1]. Our approach is to teach students how to first develop a pseudocode representation of a solution to a problem and then create the code from that pseudocode. We suggest that this approach improves a student's problem solving skills while teaching the concepts required in the introductory courses.},
	pages = {231--236},
	number = {2},
	journaltitle = {Journal of Computing Sciences in Colleges},
	author = {Olsen, Anne L},
	date = {2005},
	year = {2005},
	langid = {english},
	keywords = {teaching},
	file = {Olsen - 2005 - USING PSEUDOCODE TO TEACH PROBLEM SOLVING.pdf:/home/sarah/Zotero/storage/CALS8LLC/Olsen - 2005 - USING PSEUDOCODE TO TEACH PROBLEM SOLVING.pdf:application/pdf}
}

@article{michaelson_teaching_2015,
	title = {Teaching programming with computational and informational thinking},
	issn = {2047-3265},
	url = {http://uobrep.openrepository.com/uobrep/handle/10547/346506},
	journaltitle = {Journal of pedagogic development},
	author = {Michaelson, Greg},
	urldate = {2019-08-13},
	date = {2015-03-01},
	year = {2015},
	langid = {english},
	keywords = {teaching},
	file = {Full Text PDF:/home/sarah/Zotero/storage/XHHEJ9GQ/Michaelson - 2015 - Teaching programming with computational and inform.pdf:application/pdf;Snapshot:/home/sarah/Zotero/storage/8WZDWJX7/346506.html:text/html}
}

@inproceedings{cutts_code_2014,
	location = {New York, {NY}, {USA}},
	title = {Code or (Not Code): Separating Formal and Natural Language in {CS} Education},
	isbn = {978-1-4503-3250-7},
	url = {http://doi.acm.org/10.1145/2670757.2670780},
	doi = {10.1145/2670757.2670780},
	series = {{WiPSCE} '14},
	shorttitle = {Code or (Not Code)},
	abstract = {This paper argues that the "institutionalised understanding" of pseudo-code as a blend of formal and natural languages makes it an unsuitable choice for national assessment where the intention is to test program comprehension skills. It permits question-setters to inadvertently introduce a level of ambiguity and consequent confusion. This is not in keeping with either good assessment practice or an argument developed in the paper that {CS} education should be clearly fostering the skills needed for understanding formal, as distinct from natural, languages. The argument is backed up by an analysis of 49 questions drawn from the national school {CS} examinations of a single country, spanning a period of six years and two phases -- the first in which no formal pseudo-code was defined, the second in which a formal reference language, referred to as a "formally-defined pseudo-code", was provided for teachers and exam setters. The analysis demonstrates that in both phases, incorrect, confusing or ambiguous code was presented in questions. The paper concludes by recommending that the term reference language should be used in place of pseudo-code, and an appropriate formally-defined language specified, in national exam settings where a common language of assessment is required. This change of terms emphasises the characteristics required of a language to be used for assessment of program comprehension. The reference language used in the study is outlined. It was designed by the authors for human readability and also to make absolutely explicit the demarcation between formal and informal language, in such a way that automated checking can be carried out on programs written in the language. Formal specifications and a checker for the language are available.},
	pages = {20--28},
	booktitle = {Proceedings of the 9th Workshop in Primary and Secondary Computing Education},
	publisher = {{ACM}},
	author = {Cutts, Quintin and Connor, Richard and Michaelson, Greg and Donaldson, Peter},
	urldate = {2019-08-13},
	date = {2014},
	year = {2014},
	note = {event-place: Berlin, Germany},
	keywords = {program, teaching, assessment, comprehension, language, pseudo-code, reference},
	file = {ACM Full Text PDF:/home/sarah/Zotero/storage/9YDUA2QN/Cutts et al. - 2014 - Code or (Not Code) Separating Formal and Natural .pdf:application/pdf}
}

@inproceedings{rubin_effectiveness_2013,
	location = {New York, {NY}, {USA}},
	title = {The Effectiveness of Live-coding to Teach Introductory Programming},
	isbn = {978-1-4503-1868-6},
	url = {http://doi.acm.org/10.1145/2445196.2445388},
	doi = {10.1145/2445196.2445388},
	series = {{SIGCSE} '13},
	abstract = {Live-coding is defined as "the process of designing and implementing a [coding] project in front of class during lecture period". In this article we present our research design and results regarding the effectiveness of live-coding to teach introductory programming. The research design includes two experimental groups spread across four sections of an introductory C++ course at Colorado School of Mines. In the control group, students were taught using static code, meaning that instructors never typed, but instead viewed, compiled, and executed code examples. In the experimental or "live-coding" group, instructors started each lecture with a blank screen, and taught code examples by systematically typing, compiling, and testing code to solve example problems. To assess the effectiveness of live-coding, we administered four surveys and analyzed final grades. Two of the surveys were given at the beginning of the course, and were used to measure baseline programming knowledge and student learning preferences (i.e., {VARK}). The other two surveys, given at the end of the course, were designed to measure the amount of programming knowledge obtained as well as preferences towards live coding. Lastly, final grades were analyzed in terms of its subcomponents: the assignments, exams, final project, and overall grade. Based on our results, we conclude that teaching via live-coding is as good as if not better than using static code examples.},
	pages = {651--656},
	booktitle = {Proceeding of the 44th {ACM} Technical Symposium on Computer Science Education},
	publisher = {{ACM}},
	author = {Rubin, Marc J.},
	urldate = {2019-08-13},
	date = {2013},
	year = {2013},
	note = {event-place: Denver, Colorado, {USA}},
	keywords = {teaching, introductory, live-coding, pedagogy, programming},
	file = {ACM Full Text PDF:/home/sarah/Zotero/storage/UI2WBND5/Rubin - 2013 - The Effectiveness of Live-coding to Teach Introduc.pdf:application/pdf}
}

@inproceedings{raj_role_2018,
	title = {Role of Live-coding in Learning Introductory Programming},
	isbn = {978-1-4503-6535-2},
	url = {http://dl.acm.org/citation.cfm?id=3279720.3279725},
	doi = {10.1145/3279720.3279725},
	eventtitle = {Proceedings of the 18th Koli Calling International Conference on Computing Education Research},
	pages = {13},
	publisher = {{ACM}},
	author = {Raj, Adalbert Gerald Soosai and Patel, Jignesh M. and Halverson, Richard and Halverson, Erica Rosenfeld},
	urldate = {2019-08-13},
	date = {2018-11-22},
	year = {2018},
	keywords = {teaching}
}




@inproceedings{pears_survey_2007,
	location = {New York, {NY}, {USA}},
	title = {A Survey of Literature on the Teaching of Introductory Programming},
	url = {http://doi.acm.org/10.1145/1345443.1345441},
	doi = {10.1145/1345443.1345441},
	series = {{ITiCSE}-{WGR} '07},
	abstract = {Three decades of active research on the teaching of introductory programming has had limited effect on classroom practice. Although relevant research exists across several disciplines including education and cognitive science, disciplinary differences have made this material inaccessible to many computing educators. Furthermore, computer science instructors have not had access to a comprehensive survey of research in this area. This paper collects and classifies this literature, identifies important work and mediates it to computing educators and professional bodies. We identify research that gives well-supported advice to computing academics teaching introductory programming. Limitations and areas of incomplete coverage of existing research efforts are also identified. The analysis applies publication and research quality metrics developed by a previous {ITiCSE} working group [74].},
	pages = {204--223},
	booktitle = {Working Group Reports on {ITiCSE} on Innovation and Technology in Computer Science Education},
	publisher = {{ACM}},
	author = {Pears, Arnold and Seidman, Stephen and Malmi, Lauri and Mannila, Linda and Adams, Elizabeth and Bennedsen, Jens and Devlin, Marie and Paterson, James},
	urldate = {2019-08-13},
	date = {2007},
	year = {2007},
	note = {event-place: Dundee, Scotland},
	keywords = {teaching, bibliography, computing education research, introductory programming, literature survey},
	file = {ACM Full Text PDF:/home/sarah/Zotero/storage/EE2PTTXV/Pears et al. - 2007 - A Survey of Literature on the Teaching of Introduc.pdf:application/pdf}
}

@inproceedings{gaspar_restoring_2007,
	location = {New York, {NY}, {USA}},
	title = {Restoring "Coding with Intention" in Introductory Programming Courses},
	isbn = {978-1-59593-920-3},
	url = {http://doi.acm.org/10.1145/1324302.1324323},
	doi = {10.1145/1324302.1324323},
	series = {{SIGITE} '07},
	abstract = {This descriptive study discusses two conceptual difficulties encountered by students in introductory programming courses regardless of the chosen language or pedagogical approach (e.g. objects, classes or fundamentals first). Firstly, students tend to learn programming by memorizing correct code examples instead of acquiring the programming thought process. Secondly, they tend to read code by "flying" over it at a comfortable altitude while thinking to its assumed intent. While relaxing, this practice fails to train students to develop the rigor to catch bugs in others' or their own code. Both trends result in an almost complete loss of intentionality in the programming activity; un-innovative code is generated by analogy with (or cut and paste from) existing solutions and is then almost randomly modified until "it fits" the minimal tests requirements without real analysis of its flaws. We review and evaluate pedagogical strategies which can be leveraged by instructors to address the above mentioned issues. Namely, we discuss the benefits of various forms of "Live coding" and test-driven pair programming active learning practices.},
	pages = {91--98},
	booktitle = {Proceedings of the 8th {ACM} {SIGITE} Conference on Information Technology Education},
	publisher = {{ACM}},
	author = {Gaspar, Alessio and Langevin, Sarah},
	urldate = {2019-08-13},
	date = {2007},
	year = {2007},
	note = {event-place: Destin, Florida, {USA}},
	keywords = {teaching, active learning, constructive alignment theory, {CS}-1, evolutionary computation, evolutionary epistemology, introductory programming courses, live coding, test harness},
	file = {ACM Full Text PDF:/home/sarah/Zotero/storage/MEE4VMM3/Gaspar and Langevin - 2007 - Restoring Coding with Intention in Introductory .pdf:application/pdf}
}

@article{treisman1992studying,
  title={Studying students studying calculus: A look at the lives of minority mathematics students in college},
  author={Treisman, Uri},
  journal={The College Mathematics Journal},
  volume={23},
  number={5},
  pages={362--372},
  year={1992},
  publisher={Taylor \& Francis}
}


@article{lord_101_2001,
	title = {101 Reasons for Using Cooperative Learning in Biology Teaching},
	volume = {63},
	issn = {0002-7685, 1938-4211},
	url = {https://bioone.org/journals/The-American-Biology-Teacher/volume-63/issue-1/0002-7685(2001)063[0030:RFUCLI]2.0.CO;2/101-Reasons-for-Using-Cooperative-Learning-in-Biology-Teaching/10.1662/0002-7685(2001)063[0030:RFUCLI]2.0.CO;2.full},
	doi = {10.1662/0002-7685(2001)063[0030:RFUCLI]2.0.CO;2},
	abstract = {The American Biology Teacher},
	pages = {30--38},
	number = {1},
	journaltitle = {The American Biology Teacher},
	shortjournal = {ambt},
	author = {Lord, Thomas R.},
	urldate = {2019-08-26},
	date = {2001-01},
	year = {2001},
	keywords = {group work},
	file = {Snapshot:/home/sarah/Zotero/storage/3AITTIXQ/0002-7685(2001)063[0030RFUCLI]2.0.CO\;2.html:text/html}
}

@article{gallagher_first_2011,
	title = {A First Attempt to Bring Computational Biology into Advanced High School Biology Classrooms},
	volume = {7},
	issn = {1553-7358},
	url = {https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1002244},
	doi = {10.1371/journal.pcbi.1002244},
	abstract = {Computer science has become ubiquitous in many areas of biological research, yet most high school and even college students are unaware of this. As a result, many college biology majors graduate without adequate computational skills for contemporary fields of biology. The absence of a computational element in secondary school biology classrooms is of growing concern to the computational biology community and biology teachers who would like to acquaint their students with updated approaches in the discipline. We present a first attempt to correct this absence by introducing a computational biology element to teach genetic evolution into advanced biology classes in two local high schools. Our primary goal was to show students how computation is used in biology and why a basic understanding of computation is necessary for research in many fields of biology. This curriculum is intended to be taught by a computational biologist who has worked with a high school advanced biology teacher to adapt the unit for his/her classroom, but a motivated high school teacher comfortable with mathematics and computing may be able to teach this alone. In this paper, we present our curriculum, which takes into consideration the constraints of the required curriculum, and discuss our experiences teaching it. We describe the successes and challenges we encountered while bringing this unit to high school students, discuss how we addressed these challenges, and make suggestions for future versions of this curriculum.We believe that our curriculum can be a valuable seed for further development of computational activities aimed at high school biology students. Further, our experiences may be of value to others teaching computational biology at this level. Our curriculum can be obtained at http://ecsite.cs.colorado.edu/?page\_id=149\#biology or by contacting the authors.},
	pages = {e1002244},
	number = {10},
	journaltitle = {{PLOS} Computational Biology},
	shortjournal = {{PLOS} Computational Biology},
	author = {Gallagher, Suzanne Renick and Coon, William and Donley, Kristin and Scott, Abby and Goldberg, Debra S.},
	urldate = {2019-08-27},
	date = {2011-10-27},
	year = {2011},
	langid = {english},
	keywords = {Algorithms, Biologists, {BLAST} algorithm, Computational biology, Computer and information sciences, Phylogenetic analysis, Schools, Teachers, teaching},
	file = {Full Text PDF:/home/sarah/Zotero/storage/JC8ERZ6K/Gallagher et al. - 2011 - A First Attempt to Bring Computational Biology int.pdf:application/pdf;Snapshot:/home/sarah/Zotero/storage/I9GZ2ZC8/article.html:text/html}
}

@article{compeau_establishing_2019,
	title = {Establishing a computational biology flipped classroom},
	volume = {15},
	issn = {1553-7358},
	url = {https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1006764},
	doi = {10.1371/journal.pcbi.1006764},
	abstract = {In a flipped classroom, students complete automated modules to replace a traditional lecture, allowing the time devoted for the lecture to be devoted to constructive tasks reinforcing student knowledge. Yet although the flipped classroom offers a compelling approach for fostering a constructivist, student-centric learning environment, research on the efficacy of flipped classes has been mixed. For that matter, is it possible to successfully flip a classroom in an advanced, heavily specialized course like a bioinformatics algorithms course? Over the past several years, the author has implemented a flipped version of such a course and will discuss some of the successes and pitfalls encountered.},
	pages = {e1006764},
	number = {5},
	journaltitle = {{PLOS} Computational Biology},
	shortjournal = {{PLOS} Computational Biology},
	author = {Compeau, Phillip},
	urldate = {2019-08-27},
	date = {2019-05-23},
	year = {2019},
	langid = {english},
	keywords = {Automation, Bioinformatics, Computational biology, Human learning, Instructors, Lectures, Spring, Taxonomy, teaching},
	file = {Full Text PDF:/home/sarah/Zotero/storage/H6AKY5T3/Compeau - 2019 - Establishing a computational biology flipped class.pdf:application/pdf;Snapshot:/home/sarah/Zotero/storage/HD55XNZM/article.html:text/html}
}

@article{emery_application_2017,
	title = {The application of project-based learning in bioinformatics training},
	volume = {13},
	issn = {1553-7358},
	url = {https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005620},
	doi = {10.1371/journal.pcbi.1005620},
	pages = {e1005620},
	number = {8},
	journaltitle = {{PLOS} Computational Biology},
	shortjournal = {{PLOS} Computational Biology},
	author = {Emery, Laura R. and Morgan, Sarah L.},
	urldate = {2019-08-27},
	date = {2017-08-17},
	year = {2017},
	langid = {english},
	keywords = {Bioinformatics, group work, Human learning, Learning, Lectures, Protein interaction networks, Schools, Scientists, Surveys, teaching},
	file = {Full Text PDF:/home/sarah/Zotero/storage/CUHQ5JMJ/Emery and Morgan - 2017 - The application of project-based learning in bioin.pdf:application/pdf;Snapshot:/home/sarah/Zotero/storage/XCQBDL2J/article.html:text/html}
}

@article{korcsmaros_teaching_2013,
	title = {Teaching the bioinformatics of signaling networks: an integrated approach to facilitate multi-disciplinary learning},
	volume = {14},
	issn = {1467-5463},
	url = {https://academic.oup.com/bib/article/14/5/618/218697},
	doi = {10.1093/bib/bbt024},
	shorttitle = {Teaching the bioinformatics of signaling networks},
	abstract = {Abstract.  The number of bioinformatics tools and resources that support molecular and cell biology approaches is continuously expanding. Moreover, systems and},
	pages = {618--632},
	number = {5},
	journaltitle = {Briefings in Bioinformatics},
	shortjournal = {Brief Bioinform},
	author = {Korcsmaros, Tamas and Dunai, Zsuzsanna A. and Vellai, Tibor and Csermely, Peter},
	urldate = {2019-08-27},
	date = {2013-09-01},
	year = {2013},
	langid = {english},
	keywords = {group work, teaching},
	file = {Full Text PDF:/home/sarah/Zotero/storage/CXS8KT7K/Korcsmaros et al. - 2013 - Teaching the bioinformatics of signaling networks.pdf:application/pdf;Snapshot:/home/sarah/Zotero/storage/GQL66VEK/218697.html:text/html}
}

@article{fuselier_trace_2011,
	title = {From trace evidence to bioinformatics: Putting bryophytes into molecular biology education},
	volume = {39},
	rights = {Copyright © 2011 Wiley Periodicals, Inc.},
	issn = {1539-3429},
	url = {https://iubmb.onlinelibrary.wiley.com/doi/abs/10.1002/bmb.20458},
	doi = {10.1002/bmb.20458},
	shorttitle = {From trace evidence to bioinformatics},
	abstract = {Students benefit most from their science education when they participate fully in the process of science in the context of real-world problems. We describe a student-directed open-inquiry lab experience that has no predetermined outcomes and requires students to engage in all components of scientific inquiry from posing a question through evaluating and reporting results. Over 5 weeks, students learn how bryophytes are used in forensics and become proficient in important molecular biology lab skills including {DNA} isolation, polymerase chain reaction, gel electrophoresis, capillary electrophoresis, and genotyping. For this portion of the experience, there is no specialized equipment necessary outside of gel electrophoresis supplies and a thermocycler. In an optional extension of the experience, students sequence a plastid intron and use introductory bioinformatics skills to identify species related to their forensics case. Students who participated in the lab experience performed well on content-based assessment, and student attitudes toward the experience were positive and indicative of engaged learning. The lab experience is easily modified for higher or lower level courses and can be used in secondary education. Biochemistry and Molecular Biology Education Vol. 39, No. 1, pp. 38–46, 2011},
	pages = {38--46},
	number = {1},
	journaltitle = {Biochemistry and Molecular Biology Education},
	author = {Fuselier, Linda and Bougary, Azhar and Malott, Michelle},
	urldate = {2019-08-27},
	date = {2011},
	year = {2011},
	langid = {english},
	keywords = {group work, Inquiry, molecular biology laboratory, {RAPD}-{PCR}, science education, teaching, undergraduate},
	file = {Full Text PDF:/home/sarah/Zotero/storage/NKS7VNAD/Fuselier et al. - 2011 - From trace evidence to bioinformatics Putting bry.pdf:application/pdf;Snapshot:/home/sarah/Zotero/storage/AHCALXCL/bmb.html:text/html}
}

@article{faust_paulson_1998,
  title={Active Learning in the College Classroom},
  author={Faust, Jennifer L and Paulson, Donald R},
  journal={Journal on Excellence in College Teaching},
  volume={9},
  number={2},
  pages={3--24},
  year={1998}
}

@article{WilsonSayres18,
	Author = {Wilson Sayres, Melissa A and Hauser, Charles and Sierk, Michael and Robic, Srebrenka and Rosenwald, Anne G and Smith, Todd M and Triplett, Eric W and Williams, Jason J and Dinsdale, Elizabeth and Morgan, William R and Burnette III, James M and Donovan, Samuel S and Drew, Jennifer C and Elgin, Sarah C R and Fowlks, Edison R and Galindo-Gonzalez, Sebastian and Goodman, Anya L and Grandgenett, Nealy F and Goller, Carlos C and Jungck, John R and Newman, Jeffrey D and Pearson, William and Ryder, Elizabeth F and Tosado-Acevedo, Rafael and Tapprich, William and Tobin, Tammy C and Toro-Mart{\'\i}nez, Arl{\'\i}n and Welch, Lonnie R and Wright, Robin and Barone, Lindsay and Ebenbach, David and McWilliams, Mindy and Olney, Kimberly C and Pauley, Mark A},
	Date-Added = {2018-06-21 16:43:10 +0000},
	Date-Modified = {2018-07-13 12:22:02 +0000},
	Journal = {PLoS One},
	Journal-Full = {PloS one},
	Pages = {e0196878},
	Pmc = {PMC5988330},
	Pmid = {29870542},
	Pst = {epublish},
	Title = {Bioinformatics core competencies for undergraduate life sciences education},
	Volume = {13},
	Year = {2018},
	Bdsk-Url-1 = {http://dx.doi.org/10.1371/journal.pone.0196878}}
	
@article{Barone17,
	Author = {Barone, L. and Williams, J. and Micklos, D.},
	Journal = {PLOS Computational Biology},
	Pages = {e1005755},
	Title = {{Unmet needs for analyzing biological big data: A survey of 704 NSF principal investigators}},
	Volume = {13},
	Year = {2017}}

@article{Williams17,
	Author = {Williams, J. and Drew, J. and Galindo-Gonzalez, S. and Robic, S. and Dinsdale, E. and Morgan, W. and Triplett, E. and Burnette, J. and Donovan, S. and Elgin, S. and Fowlks, E. and Goodman, A. and Grandgenett, N. and Goller, C. and Hauser, C. and Jungck, J.R. and Newman, J. and Pearson, W. and Ryder, E. and Wilson Sayres, M. and Sierk, M. and Smith, T. and Tosado-Acevedo, R. and Tapprich, W. and Tobin, T. and Toro-Mart{\'{i}}nez, A. and Welch, L. and Wright, R. and Ebenbach, D. and McWilliams, M. and Rosenwald, A. and Pauley, M.},
	Date-Modified = {2019-07-15 16:58:57 -0400},
	Journal = {BioRxiv 204420 [Preprint]},
	Publisher = {Cold Spring Harbor Laboratory},
	Title = {Barriers to Integration of Bioinformatics into Undergraduate Life Sciences Education},
	Year = {2017},
	Bdsk-Url-1 = {https://www.biorxiv.org/content/early/2017/10/19/204420},
	Bdsk-Url-2 = {http://dx.doi.org/10.1101/204420}}


@article{Cummings10,
	Author = {Cummings, Michael P and Temple, Glena G},
	Journal = {Brief Bioinform},
	Month = {Nov},
	Number = {6},
	Pages = {537-43},
	Title = {Broader incorporation of bioinformatics in education: opportunities and challenges},
	Volume = {11},
	Year = {2010}}


@article{Gibson18,
	Author = {Gibson, J Phil and Mourad, Teresa},
	Journal = {Am J Bot},
	Month = {12},
	Number = {12},
	Pages = {1953-1956},
	Title = {The growing importance of data literacy in life science education},
	Volume = {105},
	Year = {2018}}


@article{Kjelvik19,
	Abstract = {Data are becoming increasingly important in science and society, and thus data literacy is a vital asset to students as they prepare for careers in and outside science, technology, engineering, and mathematics and go on to lead productive lives. In this paper, we discuss why the strongest learning experiences surrounding data literacy may arise when students are given opportunities to work with authentic data from scientific research. First, we explore the overlap between the fields of quantitative reasoning, data science, and data literacy, specifically focusing on how data literacy results from practicing quantitative reasoning and data science in the context of authentic data. Next, we identify and describe features that influence the complexity of authentic data sets (selection, curation, scope, size, and messiness) and implications for data-literacy instruction. Finally, we discuss areas for future research with the aim of identifying the impact that authentic data may have on student learning. These include defining desired learning outcomes surrounding data use in the classroom and identification of teaching best practices when using data in the classroom to develop students' data-literacy abilities.},
	Author = {Kjelvik, Melissa K and Schultheis, Elizabeth H},
	Date-Added = {2019-08-28 15:06:26 -0400},
	Date-Modified = {2019-08-28 15:06:26 -0400},
	Doi = {10.1187/cbe.18-02-0023},
	Journal = {CBE Life Sci Educ},
	Journal-Full = {CBE life sciences education},
	Month = {Jun},
	Number = {2},
	Pages = {es2},
	Pmid = {31074698},
	Pst = {ppublish},
	Title = {Getting Messy with Authentic Data: Exploring the Potential of Using Data from Scientific Research to Support Student Data Literacy},
	Volume = {18},
	Year = {2019},
	Bdsk-Url-1 = {https://doi.org/10.1187/cbe.18-02-0023}}


@article{Loman13,
	Author = {Loman, Nick and Watson, Mick},
	Journal = {Nat Biotechnol},
	Month = {Nov},
	Number = {11},
	Pages = {996-8},
	Title = {So you want to be a computational biologist?},
	Volume = {31},
	Year = {2013}}

@article{treisman1992studying,
  title={Studying students studying calculus: A look at the lives of minority mathematics students in college},
  author={Treisman, Uri},
  journal={The College Mathematics Journal},
  volume={23},
  number={5},
  pages={362--372},
  year={1992},
  publisher={Taylor \& Francis}
}

@techreport{wu1990,
  title={Problem-solving transfer among programming languages},
  author={Wu, Quanfeng and Anderson, John R},
  year={1990},
  institution={Carnegie-Mellon University Pittsburgh PA Artificial Intelligence And Psychology}
}

@article{cook2014,
author = {John Cook and Daniel Bedford and Scott Mandia},
title = {Raising Climate Literacy Through Addressing Misinformation: Case Studies in Agnotology-Based Learning},
journal = {Journal of Geoscience Education},
volume = {62},
number = {3},
pages = {296-306},
year  = {2014},
publisher = {Routledge},
doi = {10.5408/13-071.1}
}